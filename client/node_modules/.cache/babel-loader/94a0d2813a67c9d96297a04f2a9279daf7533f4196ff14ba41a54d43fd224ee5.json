{"ast":null,"code":"var _jsxFileName = \"E:\\\\purplesaloon\\\\client\\\\src\\\\context\\\\TokenContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TokenContext = /*#__PURE__*/createContext();\nexport const TokenProvider = ({\n  children\n}) => {\n  _s();\n  // Store all tokens with their details\n  const [tokens, setTokens] = useState([]); // {tokenNumber, gender, service, name, mobile, served, tokenType}\n\n  // Separate counters for male and female tokens\n  const [counters, setCounters] = useState({\n    male: {\n      current: 0,\n      next: 1\n    },\n    female: {\n      current: 0,\n      next: 1\n    }\n  });\n\n  // Add a new token\n  const addToken = token => {\n    const gender = token.gender.toLowerCase();\n    const tokenNumber = counters[gender].next;\n    const tokenWithNumber = {\n      ...token,\n      tokenNumber,\n      tokenType: gender,\n      tokenId: `${gender.charAt(0).toUpperCase()}${tokenNumber}`\n    };\n    setTokens(prev => [...prev, tokenWithNumber]);\n\n    // Increment the appropriate counter\n    setCounters(prev => ({\n      ...prev,\n      [gender]: {\n        ...prev[gender],\n        next: prev[gender].next + 1\n      }\n    }));\n    return tokenNumber; // Return the assigned token number\n  };\n\n  // Serve the next token for a specific gender\n  const serveToken = gender => {\n    const genderLower = gender.toLowerCase();\n    const nextToken = tokens.find(t => t.gender.toLowerCase() === genderLower && !t.served && t.tokenNumber > counters[genderLower].current);\n    if (nextToken) {\n      setTokens(prev => prev.map(t => t.tokenId === nextToken.tokenId ? {\n        ...t,\n        served: true\n      } : t));\n      setCounters(prev => ({\n        ...prev,\n        [genderLower]: {\n          ...prev[genderLower],\n          current: nextToken.tokenNumber\n        }\n      }));\n      return nextToken.tokenNumber;\n    }\n    return null;\n  };\n\n  // Get the current token for a specific gender\n  const getCurrentToken = gender => {\n    var _counters$genderLower;\n    const genderLower = gender.toLowerCase();\n    return ((_counters$genderLower = counters[genderLower]) === null || _counters$genderLower === void 0 ? void 0 : _counters$genderLower.current) || 0;\n  };\n\n  // Set the current token for a specific gender\n  const setCurrentToken = (gender, tokenNumber) => {\n    const genderLower = gender.toLowerCase();\n    setCounters(prev => ({\n      ...prev,\n      [genderLower]: {\n        ...prev[genderLower],\n        current: tokenNumber\n      }\n    }));\n  };\n\n  // Get the most recent token for a specific gender\n  const getRecentToken = gender => {\n    const genderLower = gender.toLowerCase();\n    const genderTokens = tokens.filter(t => t.gender.toLowerCase() === genderLower);\n    return genderTokens.length > 0 ? genderTokens[genderTokens.length - 1] : null;\n  };\n  return /*#__PURE__*/_jsxDEV(TokenContext.Provider, {\n    value: {\n      tokens,\n      counters,\n      getCurrentToken,\n      getRecentToken,\n      addToken,\n      serveToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenProvider, \"ymaf2hmUZBsck72qk8jeIwrdYEY=\");\n_c = TokenProvider;\nvar _c;\n$RefreshReg$(_c, \"TokenProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","TokenContext","TokenProvider","children","_s","tokens","setTokens","counters","setCounters","male","current","next","female","addToken","token","gender","toLowerCase","tokenNumber","tokenWithNumber","tokenType","tokenId","charAt","toUpperCase","prev","serveToken","genderLower","nextToken","find","t","served","map","getCurrentToken","_counters$genderLower","setCurrentToken","getRecentToken","genderTokens","filter","length","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/purplesaloon/client/src/context/TokenContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const TokenContext = createContext();\n\nexport const TokenProvider = ({ children }) => {\n  // Store all tokens with their details\n  const [tokens, setTokens] = useState([]); // {tokenNumber, gender, service, name, mobile, served, tokenType}\n  \n  // Separate counters for male and female tokens\n  const [counters, setCounters] = useState({\n    male: { current: 0, next: 1 },\n    female: { current: 0, next: 1 }\n  });\n\n  // Add a new token\n  const addToken = (token) => {\n    const gender = token.gender.toLowerCase();\n    const tokenNumber = counters[gender].next;\n    const tokenWithNumber = { \n      ...token, \n      tokenNumber,\n      tokenType: gender,\n      tokenId: `${gender.charAt(0).toUpperCase()}${tokenNumber}`\n    };\n    \n    setTokens((prev) => [...prev, tokenWithNumber]);\n    \n    // Increment the appropriate counter\n    setCounters(prev => ({\n      ...prev,\n      [gender]: {\n        ...prev[gender],\n        next: prev[gender].next + 1\n      }\n    }));\n    \n    return tokenNumber; // Return the assigned token number\n  };\n\n  // Serve the next token for a specific gender\n  const serveToken = (gender) => {\n    const genderLower = gender.toLowerCase();\n    const nextToken = tokens.find(t => \n      t.gender.toLowerCase() === genderLower && \n      !t.served && \n      t.tokenNumber > counters[genderLower].current\n    );\n\n    if (nextToken) {\n      setTokens(prev => \n        prev.map(t => \n          t.tokenId === nextToken.tokenId ? { ...t, served: true } : t\n        )\n      );\n      \n      setCounters(prev => ({\n        ...prev,\n        [genderLower]: {\n          ...prev[genderLower],\n          current: nextToken.tokenNumber\n        }\n      }));\n      \n      return nextToken.tokenNumber;\n    }\n    return null;\n  };\n\n  // Get the current token for a specific gender\n  const getCurrentToken = (gender) => {\n    const genderLower = gender.toLowerCase();\n    return counters[genderLower]?.current || 0;\n  };\n\n  // Set the current token for a specific gender\n  const setCurrentToken = (gender, tokenNumber) => {\n    const genderLower = gender.toLowerCase();\n    setCounters(prev => ({\n      ...prev,\n      [genderLower]: {\n        ...prev[genderLower],\n        current: tokenNumber\n      }\n    }));\n  };\n\n  // Get the most recent token for a specific gender\n  const getRecentToken = (gender) => {\n    const genderLower = gender.toLowerCase();\n    const genderTokens = tokens.filter(t => t.gender.toLowerCase() === genderLower);\n    return genderTokens.length > 0 ? genderTokens[genderTokens.length - 1] : null;\n  };\n\n  return (\n    <TokenContext.Provider value={{ \n      tokens, \n      counters,\n      getCurrentToken,\n      getRecentToken,\n      addToken, \n      serveToken \n    }}>\n      {children}\n    </TokenContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}