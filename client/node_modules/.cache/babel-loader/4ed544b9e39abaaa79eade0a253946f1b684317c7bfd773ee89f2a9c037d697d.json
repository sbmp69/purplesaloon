{"ast":null,"code":"var _jsxFileName = \"E:\\\\purplesaloon\\\\client\\\\src\\\\pages\\\\TokenForm.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button, Grid, CircularProgress, Alert, Box, Paper, Snackbar } from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { TokenContext } from '../context/TokenContext';\nimport { supabase } from '../utils/supabase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TokenForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state: {\n      gender,\n      service\n    }\n  } = useLocation();\n  const {\n    addToken\n  } = useContext(TokenContext);\n  const [formData, setFormData] = useState({\n    name: '',\n    mobile: '',\n    otp: ''\n  });\n  const [otpSent, setOtpSent] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: ''\n  });\n  const [session, setSession] = useState(null);\n\n  // Format phone number to E.164 format (required by Supabase)\n  const formatPhoneNumber = phone => {\n    // Remove all non-digit characters\n    const cleaned = phone.replace(/\\D/g, '');\n\n    // For Indian numbers (10 digits)\n    if (cleaned.length === 10) {\n      return `+91${cleaned}`; // India country code\n    }\n\n    // If it's 12 digits (91 followed by 10-digit number)\n    if (cleaned.length === 12 && cleaned.startsWith('91')) {\n      return `+${cleaned}`;\n    }\n\n    // If it's 11 digits (0 followed by 10-digit number)\n    if (cleaned.length === 11 && cleaned.startsWith('0')) {\n      return `+91${cleaned.substring(1)}`;\n    }\n\n    // If it already has a + but no country code\n    if (phone.startsWith('+') && phone.length < 12) {\n      return `+91${phone.substring(1).replace(/\\D/g, '')}`;\n    }\n\n    // If it doesn't start with + but has 10+ digits\n    if (cleaned.length >= 10) {\n      return `+${cleaned}`;\n    }\n\n    // Default case - return as is (will likely fail validation)\n    return phone.startsWith('+') ? phone : `+${phone}`;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSendOTP = async () => {\n    if (!formData.mobile || !formData.name) {\n      setSnackbar({\n        open: true,\n        message: 'Please enter both name and mobile number',\n        severity: 'error'\n      });\n      return;\n    }\n\n    // Debug: Log Supabase configuration\n    const debugSupabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://dfcuhovsqrwvnaddngij.supabase.co';\n    const debugAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRmY3Vob3ZzcXJ3dm5hZGRuZ2lqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ2MzcyOTIsImV4cCI6MjA3MDIxMzI5Mn0.F8RSmgSsLTVbSwvimO_6SE7d3u2uXulCdsJ7ajmIOqY';\n    console.log('Using Supabase URL:', debugSupabaseUrl);\n    console.log('Using Supabase Anon Key:', debugAnonKey ? 'Present' : 'Missing');\n\n    // Log the supabase client configuration\n    console.log('Supabase client config:', {\n      url: debugSupabaseUrl,\n      anonKey: debugAnonKey ? '***' + debugAnonKey.slice(-4) : 'Missing'\n    });\n    try {\n      setIsLoading(true);\n      setErrorMessage('');\n\n      // Format and validate phone number\n      const formattedPhone = formatPhoneNumber(formData.mobile);\n\n      // Basic validation for Indian numbers\n      if (!formattedPhone.startsWith('+91') || formattedPhone.length !== 13) {\n        throw new Error('Please enter a valid 10-digit Indian mobile number');\n      }\n      console.log('Attempting to send OTP to:', formattedPhone);\n      console.log('Sending OTP to:', formattedPhone);\n      console.log('Supabase client config:', {\n        url: supabase.supabaseUrl,\n        key: process.env.REACT_APP_SUPABASE_ANON_KEY ? 'Present' : 'Missing'\n      });\n\n      // Send OTP using Supabase Auth\n      console.log('Initiating OTP request to Supabase...');\n      const {\n        data,\n        error\n      } = await supabase.auth.signInWithOtp({\n        phone: formattedPhone,\n        options: {\n          shouldCreateUser: true,\n          data: {\n            name: formData.name,\n            phone: formattedPhone,\n            gender,\n            service\n          },\n          channel: 'sms'\n        }\n      });\n      console.log('Supabase Auth response:', JSON.stringify({\n        data: data ? 'OTP sent successfully' : 'No data in response',\n        error: error ? error.message : 'No error',\n        timestamp: new Date().toISOString()\n      }, null, 2));\n      if (error) {\n        console.error('Supabase Auth Error:', error);\n\n        // Handle specific Twilio errors\n        if (error.message.includes('Twilio: Invalid phone number')) {\n          throw new Error('Please enter a valid mobile number');\n        } else if (error.message.includes('Twilio: Unverified phone number')) {\n          throw new Error('This number is not verified in Twilio trial account. Please use a verified number.');\n        } else if (error.message.includes('Twilio: Invalid Access Token')) {\n          throw new Error('Authentication error with SMS service. Please try again later.');\n        } else {\n          throw error;\n        }\n      }\n      setOtpSent(true);\n      setSnackbar({\n        open: true,\n        message: 'OTP sent successfully to your mobile!',\n        severity: 'success'\n      });\n    } catch (error) {\n      console.error('Error in handleSendOTP:', error);\n      setSnackbar({\n        open: true,\n        message: error.message || 'Failed to send OTP. Please try again.',\n        severity: 'error'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleVerifyOTP = async e => {\n    e.preventDefault();\n    if (!formData.otp) {\n      setErrorMessage('Please enter the OTP');\n      return;\n    }\n    try {\n      var _session$user;\n      setIsVerifying(true);\n      setErrorMessage('');\n\n      // Verify OTP with Supabase\n      const formattedPhone = formatPhoneNumber(formData.mobile);\n      const {\n        data,\n        error\n      } = await supabase.auth.verifyOtp({\n        phone: formattedPhone,\n        token: formData.otp,\n        type: 'sms'\n      });\n      if (error) throw error;\n\n      // Get the user session\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      setSession(session);\n\n      // Create the token using the authenticated user's ID\n      const {\n        token,\n        error: tokenError\n      } = await addToken({\n        gender,\n        service,\n        name: formData.name,\n        mobile: formData.mobile,\n        userId: session === null || session === void 0 ? void 0 : (_session$user = session.user) === null || _session$user === void 0 ? void 0 : _session$user.id\n      });\n      if (tokenError) throw tokenError;\n\n      // Navigate to success page with token data\n      navigate('/token-success', {\n        state: {\n          token: token,\n          gender,\n          service,\n          name: formData.name\n        }\n      });\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setSnackbar({\n        open: true,\n        message: error.message || 'Invalid OTP. Please try again.',\n        severity: 'error'\n      });\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      align: \"center\",\n      sx: {\n        mb: 4\n      },\n      children: [service, \" - \", gender.charAt(0).toUpperCase() + gender.slice(1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          align: \"center\",\n          children: otpSent ? 'Verify OTP' : 'Enter Your Details'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: snackbar.open,\n          autoHideDuration: 6000,\n          onClose: () => setSnackbar({\n            ...snackbar,\n            open: false\n          }),\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: () => setSnackbar({\n              ...snackbar,\n              open: false\n            }),\n            severity: snackbar.severity || 'info',\n            sx: {\n              width: '100%'\n            },\n            children: snackbar.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), !otpSent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Your Name\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange,\n            fullWidth: true,\n            disabled: isLoading,\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Mobile Number\",\n            name: \"mobile\",\n            type: \"tel\",\n            value: formData.mobile,\n            onChange: handleChange,\n            fullWidth: true,\n            disabled: isLoading,\n            inputProps: {\n              maxLength: 10,\n              pattern: '[0-9]*'\n            },\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSendOTP,\n            disabled: !formData.name || !formData.mobile || isLoading,\n            endIcon: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 38\n            }, this) : null,\n            children: isLoading ? 'Sending OTP...' : 'Send OTP'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Enter OTP\",\n            name: \"otp\",\n            value: formData.otp,\n            onChange: handleChange,\n            fullWidth: true,\n            disabled: isVerifying,\n            inputProps: {\n              maxLength: 6,\n              pattern: '[0-9]*'\n            },\n            sx: {\n              mb: 2\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleVerifyOTP,\n            disabled: !formData.otp || isVerifying,\n            endIcon: isVerifying ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 40\n            }, this) : null,\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            children: isVerifying ? 'Verifying...' : 'Verify & Get Token'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => setOtpSent(false),\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenForm, \"4gMdT4WP0yS7IwyaGGqGSOhMtsQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TokenForm;\nexport default TokenForm;\nvar _c;\n$RefreshReg$(_c, \"TokenForm\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Container","Typography","TextField","Button","Grid","CircularProgress","Alert","Box","Paper","Snackbar","useNavigate","useLocation","TokenContext","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","TokenForm","_s","navigate","state","gender","service","addToken","formData","setFormData","name","mobile","otp","otpSent","setOtpSent","isLoading","setIsLoading","isVerifying","setIsVerifying","errorMessage","setErrorMessage","snackbar","setSnackbar","open","message","session","setSession","formatPhoneNumber","phone","cleaned","replace","length","startsWith","substring","handleChange","e","value","target","prev","handleSendOTP","severity","debugSupabaseUrl","process","env","REACT_APP_SUPABASE_URL","debugAnonKey","REACT_APP_SUPABASE_ANON_KEY","console","log","url","anonKey","slice","formattedPhone","Error","supabaseUrl","key","data","error","auth","signInWithOtp","options","shouldCreateUser","channel","JSON","stringify","timestamp","Date","toISOString","includes","handleVerifyOTP","preventDefault","_session$user","verifyOtp","token","type","getSession","tokenError","userId","user","id","maxWidth","sx","mt","children","variant","gutterBottom","align","mb","charAt","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","label","onChange","fullWidth","disabled","inputProps","maxLength","pattern","color","onClick","endIcon","size","_c","$RefreshReg$"],"sources":["E:/purplesaloon/client/src/pages/TokenForm.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { \n  Container, \n  Typography, \n  TextField, \n  Button, \n  Grid, \n  CircularProgress,\n  Alert,\n  Box,\n  Paper,\n  Snackbar\n} from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { TokenContext } from '../context/TokenContext';\nimport { supabase } from '../utils/supabase';\n\nconst TokenForm = () => {\n  const navigate = useNavigate();\n  const { state: { gender, service } } = useLocation();\n  const { addToken } = useContext(TokenContext);\n\n  const [formData, setFormData] = useState({\n    name: '',\n    mobile: '',\n    otp: ''\n  });\n  const [otpSent, setOtpSent] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [snackbar, setSnackbar] = useState({ open: false, message: '' });\n  const [session, setSession] = useState(null);\n  \n  // Format phone number to E.164 format (required by Supabase)\n  const formatPhoneNumber = (phone) => {\n    // Remove all non-digit characters\n    const cleaned = phone.replace(/\\D/g, '');\n    \n    // For Indian numbers (10 digits)\n    if (cleaned.length === 10) {\n      return `+91${cleaned}`; // India country code\n    }\n    \n    // If it's 12 digits (91 followed by 10-digit number)\n    if (cleaned.length === 12 && cleaned.startsWith('91')) {\n      return `+${cleaned}`;\n    }\n    \n    // If it's 11 digits (0 followed by 10-digit number)\n    if (cleaned.length === 11 && cleaned.startsWith('0')) {\n      return `+91${cleaned.substring(1)}`;\n    }\n    \n    // If it already has a + but no country code\n    if (phone.startsWith('+') && phone.length < 12) {\n      return `+91${phone.substring(1).replace(/\\D/g, '')}`;\n    }\n    \n    // If it doesn't start with + but has 10+ digits\n    if (cleaned.length >= 10) {\n      return `+${cleaned}`;\n    }\n    \n    // Default case - return as is (will likely fail validation)\n    return phone.startsWith('+') ? phone : `+${phone}`;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSendOTP = async () => {\n    if (!formData.mobile || !formData.name) {\n      setSnackbar({\n        open: true,\n        message: 'Please enter both name and mobile number',\n        severity: 'error'\n      });\n      return;\n    }\n    \n    // Debug: Log Supabase configuration\n    const debugSupabaseUrl = process.env.REACT_APP_SUPABASE_URL || 'https://dfcuhovsqrwvnaddngij.supabase.co';\n    const debugAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImRmY3Vob3ZzcXJ3dm5hZGRuZ2lqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQ2MzcyOTIsImV4cCI6MjA3MDIxMzI5Mn0.F8RSmgSsLTVbSwvimO_6SE7d3u2uXulCdsJ7ajmIOqY';\n    \n    console.log('Using Supabase URL:', debugSupabaseUrl);\n    console.log('Using Supabase Anon Key:', debugAnonKey ? 'Present' : 'Missing');\n    \n    // Log the supabase client configuration\n    console.log('Supabase client config:', {\n      url: debugSupabaseUrl,\n      anonKey: debugAnonKey ? '***' + debugAnonKey.slice(-4) : 'Missing'\n    });\n\n    try {\n      setIsLoading(true);\n      setErrorMessage('');\n      \n      // Format and validate phone number\n      const formattedPhone = formatPhoneNumber(formData.mobile);\n      \n      // Basic validation for Indian numbers\n      if (!formattedPhone.startsWith('+91') || formattedPhone.length !== 13) {\n        throw new Error('Please enter a valid 10-digit Indian mobile number');\n      }\n      \n      console.log('Attempting to send OTP to:', formattedPhone);\n      \n      console.log('Sending OTP to:', formattedPhone);\n      \n      console.log('Supabase client config:', {\n        url: supabase.supabaseUrl,\n        key: process.env.REACT_APP_SUPABASE_ANON_KEY ? 'Present' : 'Missing'\n      });\n      \n      // Send OTP using Supabase Auth\n      console.log('Initiating OTP request to Supabase...');\n      const { data, error } = await supabase.auth.signInWithOtp({\n        phone: formattedPhone,\n        options: {\n          shouldCreateUser: true,\n          data: {\n            name: formData.name,\n            phone: formattedPhone,\n            gender,\n            service\n          },\n          channel: 'sms'\n        }\n      });\n      \n      console.log('Supabase Auth response:', JSON.stringify({\n        data: data ? 'OTP sent successfully' : 'No data in response',\n        error: error ? error.message : 'No error',\n        timestamp: new Date().toISOString()\n      }, null, 2));\n\n      if (error) {\n        console.error('Supabase Auth Error:', error);\n        \n        // Handle specific Twilio errors\n        if (error.message.includes('Twilio: Invalid phone number')) {\n          throw new Error('Please enter a valid mobile number');\n        } else if (error.message.includes('Twilio: Unverified phone number')) {\n          throw new Error('This number is not verified in Twilio trial account. Please use a verified number.');\n        } else if (error.message.includes('Twilio: Invalid Access Token')) {\n          throw new Error('Authentication error with SMS service. Please try again later.');\n        } else {\n          throw error;\n        }\n      }\n      \n      setOtpSent(true);\n      setSnackbar({ \n        open: true, \n        message: 'OTP sent successfully to your mobile!',\n        severity: 'success'\n      });\n      \n    } catch (error) {\n      console.error('Error in handleSendOTP:', error);\n      setSnackbar({\n        open: true,\n        message: error.message || 'Failed to send OTP. Please try again.',\n        severity: 'error'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleVerifyOTP = async (e) => {\n    e.preventDefault();\n    if (!formData.otp) {\n      setErrorMessage('Please enter the OTP');\n      return;\n    }\n\n    try {\n      setIsVerifying(true);\n      setErrorMessage('');\n      \n      // Verify OTP with Supabase\n      const formattedPhone = formatPhoneNumber(formData.mobile);\n      const { data, error } = await supabase.auth.verifyOtp({\n        phone: formattedPhone,\n        token: formData.otp,\n        type: 'sms'\n      });\n\n      if (error) throw error;\n\n      // Get the user session\n      const { data: { session } } = await supabase.auth.getSession();\n      setSession(session);\n      \n      // Create the token using the authenticated user's ID\n      const { token, error: tokenError } = await addToken({\n        gender,\n        service,\n        name: formData.name,\n        mobile: formData.mobile,\n        userId: session?.user?.id\n      });\n\n      if (tokenError) throw tokenError;\n      \n      // Navigate to success page with token data\n      navigate('/token-success', { \n        state: { \n          token: token,\n          gender,\n          service,\n          name: formData.name\n        } \n      });\n      \n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setSnackbar({\n        open: true,\n        message: error.message || 'Invalid OTP. Please try again.',\n        severity: 'error'\n      });\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 6 }}>\n      <Typography variant=\"h5\" gutterBottom align=\"center\" sx={{ mb: 4 }}>\n        {service} - {gender.charAt(0).toUpperCase() + gender.slice(1)}\n      </Typography>\n      <Box sx={{ mt: 4 }}>\n        <Paper elevation={3} sx={{ p: 4 }}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            {otpSent ? 'Verify OTP' : 'Enter Your Details'}\n          </Typography>\n          \n          {errorMessage && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {errorMessage}\n            </Alert>\n          )}\n          \n          <Snackbar\n            open={snackbar.open}\n            autoHideDuration={6000}\n            onClose={() => setSnackbar({ ...snackbar, open: false })}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          >\n            <Alert \n              onClose={() => setSnackbar({ ...snackbar, open: false })} \n              severity={snackbar.severity || 'info'}\n              sx={{ width: '100%' }}\n            >\n              {snackbar.message}\n            </Alert>\n          </Snackbar>\n          \n          {!otpSent ? (\n            <>\n              <TextField\n                label=\"Your Name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n                fullWidth\n                disabled={isLoading}\n                sx={{ mb: 2 }}\n              />\n              <TextField\n                label=\"Mobile Number\"\n                name=\"mobile\"\n                type=\"tel\"\n                value={formData.mobile}\n                onChange={handleChange}\n                fullWidth\n                disabled={isLoading}\n                inputProps={{ maxLength: 10, pattern: '[0-9]*' }}\n                sx={{ mb: 2 }}\n              />\n              <Button \n                type=\"submit\" \n                variant=\"contained\" \n                color=\"primary\" \n                onClick={handleSendOTP}\n                disabled={!formData.name || !formData.mobile || isLoading}\n                endIcon={isLoading ? <CircularProgress size={20} /> : null}\n              >\n                {isLoading ? 'Sending OTP...' : 'Send OTP'}\n              </Button>\n            </>\n          ) : (\n            <>\n              <TextField\n                label=\"Enter OTP\"\n                name=\"otp\"\n                value={formData.otp}\n                onChange={handleChange}\n                fullWidth\n                disabled={isVerifying}\n                inputProps={{ maxLength: 6, pattern: '[0-9]*' }}\n                sx={{ mb: 2 }}\n              />\n              <Button \n                type=\"submit\" \n                variant=\"contained\" \n                color=\"primary\" \n                onClick={handleVerifyOTP}\n                disabled={!formData.otp || isVerifying}\n                endIcon={isVerifying ? <CircularProgress size={20} /> : null}\n                fullWidth\n                sx={{ mt: 2 }}\n              >\n                {isVerifying ? 'Verifying...' : 'Verify & Get Token'}\n              </Button>\n              <Button \n                variant=\"outlined\" \n                color=\"primary\" \n                onClick={() => setOtpSent(false)}\n                fullWidth\n                sx={{ mt: 2 }}\n              >\n                Back\n              </Button>\n            </>\n          )}\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default TokenForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}