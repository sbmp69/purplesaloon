{"ast":null,"code":"var _jsxFileName = \"E:\\\\purplesaloon\\\\client\\\\src\\\\pages\\\\TokenForm.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button, Grid, CircularProgress, Alert, Box, Paper, Snackbar } from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { TokenContext } from '../context/TokenContext';\nimport { supabase } from '../utils/supabase';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TokenForm = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    state: {\n      gender,\n      service\n    }\n  } = useLocation();\n  const {\n    addToken\n  } = useContext(TokenContext);\n  const [formData, setFormData] = useState({\n    name: '',\n    mobile: '',\n    otp: ''\n  });\n  const [otpSent, setOtpSent] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [snackbar, setSnackbar] = useState({\n    open: false,\n    message: ''\n  });\n  const [session, setSession] = useState(null);\n\n  // Format phone number to E.164 format (required by Supabase)\n  const formatPhoneNumber = phone => {\n    // Remove all non-digit characters\n    const cleaned = phone.replace(/\\D/g, '');\n    // If it starts with 0, replace with +91 (India)\n    if (cleaned.startsWith('0')) {\n      return `+91${cleaned.substring(1)}`;\n    }\n    // If it starts with 91, add +\n    if (cleaned.startsWith('91')) {\n      return `+${cleaned}`;\n    }\n    // If it's 10 digits, assume it's an Indian number\n    if (cleaned.length === 10) {\n      return `+91${cleaned}`;\n    }\n    // Otherwise, return as is (should have + and country code)\n    return cleaned.startsWith('+') ? cleaned : `+${cleaned}`;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSendOTP = async () => {\n    if (!formData.mobile || !formData.name) {\n      setErrorMessage('Please enter both name and mobile number');\n      return;\n    }\n    try {\n      setIsLoading(true);\n      setErrorMessage('');\n\n      // Send the OTP using Supabase Auth\n      const formattedPhone = formatPhoneNumber(formData.mobile);\n      const {\n        error\n      } = await supabase.auth.signInWithOtp({\n        phone: formattedPhone,\n        options: {\n          data: {\n            name: formData.name,\n            gender,\n            service\n          },\n          shouldCreateUser: true\n        }\n      });\n      if (error) throw error;\n      setOtpSent(true);\n      setSnackbar({\n        open: true,\n        message: 'OTP sent successfully to your mobile!',\n        severity: 'success'\n      });\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      setSnackbar({\n        open: true,\n        message: error.message || 'Failed to send OTP. Please try again.',\n        severity: 'error'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleVerifyOTP = async e => {\n    e.preventDefault();\n    if (!formData.otp) {\n      setErrorMessage('Please enter the OTP');\n      return;\n    }\n    try {\n      var _session$user;\n      setIsVerifying(true);\n      setErrorMessage('');\n\n      // Verify OTP with Supabase\n      const formattedPhone = formatPhoneNumber(formData.mobile);\n      const {\n        data,\n        error\n      } = await supabase.auth.verifyOtp({\n        phone: formattedPhone,\n        token: formData.otp,\n        type: 'sms'\n      });\n      if (error) throw error;\n\n      // Get the user session\n      const {\n        data: {\n          session\n        }\n      } = await supabase.auth.getSession();\n      setSession(session);\n\n      // Create the token using the authenticated user's ID\n      const {\n        token,\n        error: tokenError\n      } = await addToken({\n        gender,\n        service,\n        name: formData.name,\n        mobile: formData.mobile,\n        userId: session === null || session === void 0 ? void 0 : (_session$user = session.user) === null || _session$user === void 0 ? void 0 : _session$user.id\n      });\n      if (tokenError) throw tokenError;\n\n      // Navigate to success page with token data\n      navigate('/token-success', {\n        state: {\n          token: token,\n          gender,\n          service,\n          name: formData.name\n        }\n      });\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setSnackbar({\n        open: true,\n        message: error.message || 'Invalid OTP. Please try again.',\n        severity: 'error'\n      });\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    sx: {\n      mt: 6\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      gutterBottom: true,\n      align: \"center\",\n      sx: {\n        mb: 4\n      },\n      children: [service, \" - \", gender.charAt(0).toUpperCase() + gender.slice(1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          gutterBottom: true,\n          align: \"center\",\n          children: otpSent ? 'Verify OTP' : 'Enter Your Details'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: snackbar.open,\n          autoHideDuration: 6000,\n          onClose: () => setSnackbar({\n            ...snackbar,\n            open: false\n          }),\n          anchorOrigin: {\n            vertical: 'top',\n            horizontal: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: () => setSnackbar({\n              ...snackbar,\n              open: false\n            }),\n            severity: snackbar.severity || 'info',\n            sx: {\n              width: '100%'\n            },\n            children: snackbar.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), !otpSent ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Your Name\",\n            name: \"name\",\n            value: formData.name,\n            onChange: handleChange,\n            fullWidth: true,\n            disabled: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Mobile Number\",\n            name: \"mobile\",\n            type: \"tel\",\n            value: formData.mobile,\n            onChange: handleChange,\n            fullWidth: true,\n            disabled: loading,\n            inputProps: {\n              maxLength: 10,\n              pattern: '[0-9]*'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleSendOTP,\n            disabled: !formData.name || !formData.mobile || isLoading,\n            endIcon: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 38\n            }, this) : null,\n            children: isLoading ? 'Sending OTP...' : 'Send OTP'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Enter OTP\",\n            name: \"otp\",\n            value: formData.otp,\n            onChange: handleChange,\n            fullWidth: true,\n            disabled: loading,\n            inputProps: {\n              maxLength: 6,\n              pattern: '[0-9]*'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleVerifyOTP,\n            disabled: !formData.otp || isVerifying,\n            endIcon: isVerifying ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 40\n            }, this) : null,\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            children: isVerifying ? 'Verifying...' : 'Verify & Get Token'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            onClick: () => setOtpSent(false),\n            fullWidth: true,\n            sx: {\n              mt: 2\n            },\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(TokenForm, \"4gMdT4WP0yS7IwyaGGqGSOhMtsQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = TokenForm;\nexport default TokenForm;\nvar _c;\n$RefreshReg$(_c, \"TokenForm\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Container","Typography","TextField","Button","Grid","CircularProgress","Alert","Box","Paper","Snackbar","useNavigate","useLocation","TokenContext","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","TokenForm","_s","navigate","state","gender","service","addToken","formData","setFormData","name","mobile","otp","otpSent","setOtpSent","isLoading","setIsLoading","isVerifying","setIsVerifying","errorMessage","setErrorMessage","snackbar","setSnackbar","open","message","session","setSession","formatPhoneNumber","phone","cleaned","replace","startsWith","substring","length","handleChange","e","value","target","prev","handleSendOTP","formattedPhone","error","auth","signInWithOtp","options","data","shouldCreateUser","severity","console","handleVerifyOTP","preventDefault","_session$user","verifyOtp","token","type","getSession","tokenError","userId","user","id","maxWidth","sx","mt","children","variant","gutterBottom","align","mb","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","elevation","p","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","label","onChange","fullWidth","disabled","loading","inputProps","maxLength","pattern","color","onClick","endIcon","size","_c","$RefreshReg$"],"sources":["E:/purplesaloon/client/src/pages/TokenForm.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { \n  Container, \n  Typography, \n  TextField, \n  Button, \n  Grid, \n  CircularProgress,\n  Alert,\n  Box,\n  Paper,\n  Snackbar\n} from '@mui/material';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { TokenContext } from '../context/TokenContext';\nimport { supabase } from '../utils/supabase';\n\nconst TokenForm = () => {\n  const navigate = useNavigate();\n  const { state: { gender, service } } = useLocation();\n  const { addToken } = useContext(TokenContext);\n\n  const [formData, setFormData] = useState({\n    name: '',\n    mobile: '',\n    otp: ''\n  });\n  const [otpSent, setOtpSent] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVerifying, setIsVerifying] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [snackbar, setSnackbar] = useState({ open: false, message: '' });\n  const [session, setSession] = useState(null);\n  \n  // Format phone number to E.164 format (required by Supabase)\n  const formatPhoneNumber = (phone) => {\n    // Remove all non-digit characters\n    const cleaned = phone.replace(/\\D/g, '');\n    // If it starts with 0, replace with +91 (India)\n    if (cleaned.startsWith('0')) {\n      return `+91${cleaned.substring(1)}`;\n    }\n    // If it starts with 91, add +\n    if (cleaned.startsWith('91')) {\n      return `+${cleaned}`;\n    }\n    // If it's 10 digits, assume it's an Indian number\n    if (cleaned.length === 10) {\n      return `+91${cleaned}`;\n    }\n    // Otherwise, return as is (should have + and country code)\n    return cleaned.startsWith('+') ? cleaned : `+${cleaned}`;\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSendOTP = async () => {\n    if (!formData.mobile || !formData.name) {\n      setErrorMessage('Please enter both name and mobile number');\n      return;\n    }\n\n    try {\n      setIsLoading(true);\n      setErrorMessage('');\n      \n      // Send the OTP using Supabase Auth\n      const formattedPhone = formatPhoneNumber(formData.mobile);\n      \n      const { error } = await supabase.auth.signInWithOtp({\n        phone: formattedPhone,\n        options: {\n          data: {\n            name: formData.name,\n            gender,\n            service\n          },\n          shouldCreateUser: true\n        }\n      });\n\n      if (error) throw error;\n      \n      setOtpSent(true);\n      setSnackbar({ \n        open: true, \n        message: 'OTP sent successfully to your mobile!',\n        severity: 'success'\n      });\n      \n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      setSnackbar({\n        open: true,\n        message: error.message || 'Failed to send OTP. Please try again.',\n        severity: 'error'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleVerifyOTP = async (e) => {\n    e.preventDefault();\n    if (!formData.otp) {\n      setErrorMessage('Please enter the OTP');\n      return;\n    }\n\n    try {\n      setIsVerifying(true);\n      setErrorMessage('');\n      \n      // Verify OTP with Supabase\n      const formattedPhone = formatPhoneNumber(formData.mobile);\n      const { data, error } = await supabase.auth.verifyOtp({\n        phone: formattedPhone,\n        token: formData.otp,\n        type: 'sms'\n      });\n\n      if (error) throw error;\n\n      // Get the user session\n      const { data: { session } } = await supabase.auth.getSession();\n      setSession(session);\n      \n      // Create the token using the authenticated user's ID\n      const { token, error: tokenError } = await addToken({\n        gender,\n        service,\n        name: formData.name,\n        mobile: formData.mobile,\n        userId: session?.user?.id\n      });\n\n      if (tokenError) throw tokenError;\n      \n      // Navigate to success page with token data\n      navigate('/token-success', { \n        state: { \n          token: token,\n          gender,\n          service,\n          name: formData.name\n        } \n      });\n      \n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      setSnackbar({\n        open: true,\n        message: error.message || 'Invalid OTP. Please try again.',\n        severity: 'error'\n      });\n    } finally {\n      setIsVerifying(false);\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\" sx={{ mt: 6 }}>\n      <Typography variant=\"h5\" gutterBottom align=\"center\" sx={{ mb: 4 }}>\n        {service} - {gender.charAt(0).toUpperCase() + gender.slice(1)}\n      </Typography>\n      <Box sx={{ mt: 4 }}>\n        <Paper elevation={3} sx={{ p: 4 }}>\n          <Typography variant=\"h5\" gutterBottom align=\"center\">\n            {otpSent ? 'Verify OTP' : 'Enter Your Details'}\n          </Typography>\n          \n          {errorMessage && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {errorMessage}\n            </Alert>\n          )}\n          \n          <Snackbar\n            open={snackbar.open}\n            autoHideDuration={6000}\n            onClose={() => setSnackbar({ ...snackbar, open: false })}\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          >\n            <Alert \n              onClose={() => setSnackbar({ ...snackbar, open: false })} \n              severity={snackbar.severity || 'info'}\n              sx={{ width: '100%' }}\n            >\n              {snackbar.message}\n            </Alert>\n          </Snackbar>\n          \n          {!otpSent ? (\n            <>\n              <TextField\n                label=\"Your Name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n                fullWidth\n                disabled={loading}\n              />\n              <TextField\n                label=\"Mobile Number\"\n                name=\"mobile\"\n                type=\"tel\"\n                value={formData.mobile}\n                onChange={handleChange}\n                fullWidth\n                disabled={loading}\n                inputProps={{ maxLength: 10, pattern: '[0-9]*' }}\n              />\n              <Button \n                type=\"submit\" \n                variant=\"contained\" \n                color=\"primary\" \n                onClick={handleSendOTP}\n                disabled={!formData.name || !formData.mobile || isLoading}\n                endIcon={isLoading ? <CircularProgress size={20} /> : null}\n              >\n                {isLoading ? 'Sending OTP...' : 'Send OTP'}\n              </Button>\n            </>\n          ) : (\n            <>\n              <TextField\n                label=\"Enter OTP\"\n                name=\"otp\"\n                value={formData.otp}\n                onChange={handleChange}\n                fullWidth\n                disabled={loading}\n                inputProps={{ maxLength: 6, pattern: '[0-9]*' }}\n              />\n              <Button \n                type=\"submit\" \n                variant=\"contained\" \n                color=\"primary\" \n                onClick={handleVerifyOTP}\n                disabled={!formData.otp || isVerifying}\n                endIcon={isVerifying ? <CircularProgress size={20} /> : null}\n                fullWidth\n                sx={{ mt: 2 }}\n              >\n                {isVerifying ? 'Verifying...' : 'Verify & Get Token'}\n              </Button>\n              <Button \n                variant=\"outlined\" \n                color=\"primary\" \n                onClick={() => setOtpSent(false)}\n                fullWidth\n                sx={{ mt: 2 }}\n              >\n                Back\n              </Button>\n            </>\n          )}\n        </Paper>\n      </Box>\n    </Container>\n  );\n};\n\nexport default TokenForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}